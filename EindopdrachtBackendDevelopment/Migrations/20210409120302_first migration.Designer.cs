// <auto-generated />
using System;
using Eindopdracht.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EindopdrachtBackendDevelopment.Migrations
{
    [DbContext(typeof(TeamContext))]
    [Migration("20210409120302_first migration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eindopdracht.Models.Career", b =>
                {
                    b.Property<int>("CareerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DriverChampionships")
                        .HasColumnType("int");

                    b.Property<int>("FastestLaps")
                        .HasColumnType("int");

                    b.Property<int>("Poles")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("CareerId");

                    b.ToTable("Career");

                    b.HasData(
                        new
                        {
                            CareerId = 1,
                            DriverChampionships = 0,
                            FastestLaps = 4,
                            Poles = 7,
                            Wins = 2
                        },
                        new
                        {
                            CareerId = 2,
                            DriverChampionships = 0,
                            FastestLaps = 2,
                            Poles = 0,
                            Wins = 0
                        },
                        new
                        {
                            CareerId = 3,
                            DriverChampionships = 4,
                            FastestLaps = 38,
                            Poles = 57,
                            Wins = 53
                        });
                });

            modelBuilder.Entity("Eindopdracht.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CareerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("DriverId");

                    b.HasIndex("CareerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Driver");

                    b.HasData(
                        new
                        {
                            DriverId = 1,
                            CareerId = 1,
                            FirstName = "Charles",
                            LastName = "Leclerc",
                            Nationality = "Monégasque",
                            RaceNumber = 16
                        },
                        new
                        {
                            DriverId = 2,
                            CareerId = 2,
                            FirstName = "Lando",
                            LastName = "Norris",
                            Nationality = "British",
                            RaceNumber = 4
                        },
                        new
                        {
                            DriverId = 3,
                            CareerId = 3,
                            FirstName = "Sebastian",
                            LastName = "Vettel",
                            Nationality = "German",
                            RaceNumber = 5
                        });
                });

            modelBuilder.Entity("Eindopdracht.Models.Sponsor", b =>
                {
                    b.Property<int>("SponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SponsorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SponsorId");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("Eindopdracht.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Location = "Italy",
                            TeamName = "Scuderia Ferrari"
                        },
                        new
                        {
                            TeamId = 2,
                            Location = "United Kingdom",
                            TeamName = "McLaren"
                        },
                        new
                        {
                            TeamId = 3,
                            Location = "United Kingdom",
                            TeamName = "Aston Martin"
                        });
                });

            modelBuilder.Entity("Eindopdracht.Models.TeamSponsors", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int");

                    b.HasKey("TeamId", "SponsorId");

                    b.HasIndex("SponsorId");

                    b.ToTable("TeamSponsors");
                });

            modelBuilder.Entity("Eindopdracht.Models.Driver", b =>
                {
                    b.HasOne("Eindopdracht.Models.Career", "Career")
                        .WithMany()
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eindopdracht.Models.Team", null)
                        .WithMany("Drivers")
                        .HasForeignKey("TeamId");

                    b.Navigation("Career");
                });

            modelBuilder.Entity("Eindopdracht.Models.TeamSponsors", b =>
                {
                    b.HasOne("Eindopdracht.Models.Sponsor", "Sponsor")
                        .WithMany("TeamSponsors")
                        .HasForeignKey("SponsorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eindopdracht.Models.Team", null)
                        .WithMany("TeamSponsors")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("Eindopdracht.Models.Sponsor", b =>
                {
                    b.Navigation("TeamSponsors");
                });

            modelBuilder.Entity("Eindopdracht.Models.Team", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("TeamSponsors");
                });
#pragma warning restore 612, 618
        }
    }
}
